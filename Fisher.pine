//@version=5
indicator(title="Fisher Transform", shorttitle="Fisher", format=format.price, precision=2, timeframe="", timeframe_gaps=true)

// Inputs for Length, Radius Step, and Start Points Distance
len = input.int(9, minval=1, title="Length")
radius_step = input.float(0.15, title="Radius Step", minval=0.01)  // New input for Radius Step
start_points_distance = input.int(2, title="Start Points Distance", minval=1)  // New input for Start Points Distance

// Calculation of highest high and lowest low over the given length
high_ = ta.highest(hl2, len)
low_ = ta.lowest(hl2, len)

// Function to round values to avoid exceeding Â±0.99
round_(val) => val > .99 ? .999 : val < -.99 ? -.999 : val

// Fisher Transform calculation
value = 0.0
value := round_(.66 * ((hl2 - low_) / (high_ - low_) - .5) + .67 * nz(value[1]))
fish1 = 0.0
fish1 := .5 * math.log((1 + value) / (1 - value)) + .5 * nz(fish1[1])
fish2 = fish1[1]

// Plot horizontal lines at key levels
hline(1.5, "1.5", color=#E91E63)
hline(0.75,"0.75", color=#787B86)
hline(0, "0", color=#E91E63)
hline(-0.75, "-0.75", color=#787B86)
hline(-1.5, "-1.5", color=#E91E63)

// Plot Fisher Transform and Trigger line
plot(fish1, color=#2962FF, title="Fisher")
plot(fish2, color=#FF6D00, title="Trigger")

// Logic for utilizing Radius Step and Start Points Distance (currently placeholders for any further enhancement)
plotshape(series=na, title="Radius Step Placeholder", color=color.red, style=shape.triangleup, location=location.belowbar, offset=start_points_distance)
